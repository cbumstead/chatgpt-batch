name: CI
on:
  push:
    branches:
      - "**"
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win32
            arch: x64
            npm_config_arch: x64
          - os: windows-latest
            platform: win32
            arch: ia32
            npm_config_arch: ia32
          - os: windows-latest
            platform: win32
            arch: arm64
            npm_config_arch: arm
          - os: ubuntu-latest
            platform: linux
            arch: x64
            npm_config_arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            npm_config_arch: arm64
          - os: ubuntu-latest
            platform: linux
            arch: armhf
            npm_config_arch: arm
          - os: ubuntu-latest
            platform: alpine
            arch: x64
            npm_config_arch: x64
          - os: macos-latest
            platform: darwin
            arch: x64
            npm_config_arch: x64
          - os: macos-latest
            platform: darwin
            arch: arm64
            npm_config_arch: arm64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - run: npm install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          npm_config_arch: ${{ matrix.npm_config_arch }}
      - run: npm run test
      - shell: pwsh
        run: echo "target=${{ matrix.platform }}-${{ matrix.arch }}" >> $env:GITHUB_ENV
      - run: npx vsce package --target ${{ env.target }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.target }}
          path: "*.vsix"

  tag:
    name: Create Version Tag
    runs-on: ubuntu-latest
    needs: build
    # Only tag if all builds are successful and the branch is main
    if: success() && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Version
        id: get_version
        run: echo ::set-output name=version::$(node -p "require('./package.json').version")

      - name: Check Tag
        id: check_tag
        uses: anothrNick/check-tag@v1.1.1
        with:
          tag_name: 'v${{ steps.get_version.outputs.version }}'
        
      - name: Create Tag
        id: create_tag
        uses: anothrNick/github-tag-action@v1.33.0
        with:
          tag_name: 'v${{ steps.get_version.outputs.version }}'
          message: 'v${{ steps.get_version.outputs.version }} released'

      - name: Push Tag
        uses: anothrNick/github-tag-action@v1.33.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          push: true

  publish:
    runs-on: ubuntu-latest
    needs: tag
    if: success()
    steps:
      - uses: actions/download-artifact@v2
      - run: npx vsce publish --packagePath $(find . -iname *.vsix)
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
